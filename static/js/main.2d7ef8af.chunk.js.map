{"version":3,"sources":["Components/Dropdown/Dropdown.tsx","App.tsx","index.tsx"],"names":["Dropdown","state","unSelected","isOpened","dropDownValue","this","options","props","className","type","classNames","onClick","setState","map","option","event","currentTarget","innerText","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iTAkBaA,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,UAAU,EACVC,cAAe,eAJnB,4CAOE,WAA2B,IAAD,OACxB,EAAgDC,KAAKJ,MAA7CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,cACtBE,EAAYD,KAAKE,MAAjBD,QAER,OACE,sBAAKE,UAAU,WAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,mBACA,CACE,+BAAgCR,IAItCS,QAAS,WACP,EAAKC,UAAS,SAAAX,GAAK,MAAK,CACtBE,UAAWF,EAAME,cAZvB,SAgBGC,IAGFD,GACC,oBACEK,UAAU,iBADZ,SAGGF,EAAQO,KAAI,SAACC,GAAD,OACX,oBAEEN,UAAU,sBACVG,QAAS,SAACI,GACR,EAAKH,SAAS,CACZT,UAAU,EACVD,YAAY,EACZE,cAAeW,EAAMC,cAAcC,aAPzC,SAWGH,GAVIA,eAtCrB,GAA8BI,aCbxBZ,G,MAAU,CAAC,KAAM,IAAK,IAAK,IAAK,OAEzBa,EAAgB,WAC3B,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,CACEF,QAASA,O,MCLjBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d7ef8af.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  options: string[],\n};\n\ntype State = {\n  unSelected: boolean,\n  isOpened: boolean,\n  dropDownValue: string,\n};\n\nexport class Dropdown extends Component<Props, State> {\n  state: Readonly<State> = {\n    unSelected: true,\n    isOpened: false,\n    dropDownValue: 'Select size',\n  };\n\n  render(): React.ReactNode {\n    const { unSelected, isOpened, dropDownValue } = this.state;\n    const { options } = this.props;\n\n    return (\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'dropdown__button',\n              {\n                'dropdown__button--unSelected': unSelected,\n              },\n            )\n          }\n          onClick={() => {\n            this.setState(state => ({\n              isOpened: !state.isOpened,\n            }));\n          }}\n        >\n          {dropDownValue}\n        </button>\n\n        {isOpened && (\n          <ul\n            className=\"dropdown__list\"\n          >\n            {options.map((option: string) => (\n              <li\n                key={option}\n                className=\"dropdown__list-item\"\n                onClick={(event) => {\n                  this.setState({\n                    isOpened: false,\n                    unSelected: false,\n                    dropDownValue: event.currentTarget.innerText,\n                  });\n                }}\n              >\n                {option}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Dropdown } from './Components/Dropdown/Dropdown';\n\nimport './App.scss';\n\nconst options = ['XS', 'S', 'M', 'L', 'XL'];\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Dropdown\n        options={options}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}